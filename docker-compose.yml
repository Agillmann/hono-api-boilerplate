services:
  mysql:
    image: mysql:8.0
    container_name: api-boilerplate-mysql
    restart: unless-stopped
    command:
      - --default-authentication-plugin=caching_sha2_password
      - --skip-host-cache
      - --skip-name-resolve
      - --explicit_defaults_for_timestamp=ON
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - api-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      timeout: 30s
      retries: 15
      interval: 5s
      start_period: 60s

  # Uncomment the following service if you want to run your API in Docker as well
  # api:
  #   build: .
  #   container_name: api-boilerplate-app
  #   restart: unless-stopped
  #   ports:
  #     - "${APP_PORT:-3000}:3000"
  #   environment:
  #     - NODE_ENV=${NODE_ENV:-development}
  #     - PORT=${APP_PORT:-3000}
  #     - DATABASE_URL=${DATABASE_URL}
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   networks:
  #     - api-network

  # Grafana Monitoring Stack
  loki:
    image: grafana/loki:3.0.0
    container_name: api-boilerplate-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  promtail:
    image: grafana/promtail:3.0.0
    container_name: api-boilerplate-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail:/etc/promtail
      - ./logs:/var/log/api:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - api-network

  grafana:
    image: grafana/grafana:10.4.0
    container_name: api-boilerplate-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local

networks:
  api-network:
    driver: bridge
